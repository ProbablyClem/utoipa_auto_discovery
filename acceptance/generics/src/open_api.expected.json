{
  "components": {
    "schemas": {
      "BorrowedResponse_Person": {
        "properties": {
          "data": {
            "properties": {
              "age": {
                "format": "int32",
                "minimum": 0,
                "type": "integer"
              },
              "name": {
                "type": "string"
              }
            },
            "required": [
              "name",
              "age"
            ],
            "type": "object"
          },
          "status": {
            "format": "int32",
            "minimum": 0,
            "type": "integer"
          }
        },
        "required": [
          "status",
          "data"
        ],
        "type": "object"
      },
      "CombinedResponse_Person": {
        "properties": {
          "borrowed_response": {
            "$ref": "#/components/schemas/BorrowedResponse_Person"
          },
          "nested_response": {
            "$ref": "#/components/schemas/NestedResponse_Person"
          }
        },
        "required": [
          "nested_response",
          "borrowed_response"
        ],
        "type": "object"
      },
      "NestedResponse_Person": {
        "properties": {
          "response": {
            "$ref": "#/components/schemas/Response_Person"
          }
        },
        "required": [
          "response"
        ],
        "type": "object"
      },
      "Person": {
        "properties": {
          "age": {
            "format": "int32",
            "minimum": 0,
            "type": "integer"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "age"
        ],
        "type": "object"
      },
      "Response_Person": {
        "properties": {
          "data": {
            "properties": {
              "age": {
                "format": "int32",
                "minimum": 0,
                "type": "integer"
              },
              "name": {
                "type": "string"
              }
            },
            "required": [
              "name",
              "age"
            ],
            "type": "object"
          },
          "status": {
            "format": "int32",
            "minimum": 0,
            "type": "integer"
          }
        },
        "required": [
          "status",
          "data"
        ],
        "type": "object"
      }
    }
  },
  "info": {
    "contact": {
      "name": "ProbablyClem"
    },
    "description": "A collection of crates to test utoipauto.",
    "license": {
      "name": "MIT OR Apache-2.0"
    },
    "title": "Generic Test Api",
    "version": "0.1.0"
  },
  "openapi": "3.1.0",
  "paths": {
    "/borrowed_persons": {
      "get": {
        "operationId": "get_borrowed_persons",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BorrowedResponse_Person"
                }
              }
            },
            "description": "A BorrowedResponse<'static, Person>"
          }
        },
        "tags": [
          "crate::routes"
        ]
      }
    },
    "/combined_persons": {
      "get": {
        "operationId": "get_combined_persons",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CombinedResponse_Person"
                }
              }
            },
            "description": "A CombinedResponse<'static, Person>"
          }
        },
        "tags": [
          "crate::routes"
        ]
      }
    },
    "/nested_persons": {
      "get": {
        "operationId": "get_nested_persons",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NestedResponse_Person"
                }
              }
            },
            "description": "A NestedResponse<Person>"
          }
        },
        "tags": [
          "crate::routes"
        ]
      }
    },
    "/persons": {
      "get": {
        "operationId": "get_persons",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response_Person"
                }
              }
            },
            "description": "A Response<Person>"
          }
        },
        "tags": [
          "crate::routes"
        ]
      }
    }
  }
}
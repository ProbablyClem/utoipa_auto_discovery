name: ci

on:
  # push:
  #   branches: ["main"]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust: [ "1.75.0", "stable", "nightly" ]
    steps:
      - uses: actions/checkout@v4
      - name: install toolchain
        uses: dtolnay/rust-toolchain@master # Needed to always have access to the latest releases. DO NOT REPLACE WITH STABLE!
        with:
          toolchain: ${{ matrix.rust }}
      - name: add cargo caching
        uses: Swatinem/rust-cache@v2
      - name: Build
        run: cargo build --all-features --verbose
      - name: Run tests
        run: cargo test --verbose
      - name: Run tests with all features
        run: cargo test --all-features --verbose

  acceptance-tests:
    name: Acceptance Tests
    runs-on: ubuntu-latest
    # Set default working directory
    defaults:
      run:
        working-directory: ./acceptance
    strategy:
      matrix:
        rust: [ "stable", "nightly" ]
    steps:
      - uses: actions/checkout@v3
      - name: install toolchain
        uses: dtolnay/rust-toolchain@master # Needed to always have access to the latest releases. DO NOT REPLACE WITH STABLE!
        with:
          toolchain: ${{ matrix.rust }}
      - name: add cargo caching
        uses: Swatinem/rust-cache@v2
      - name: Run acceptance tests (build)
        run: cargo build
      - name: Run acceptance tests (tests)
        run: cargo test --verbose

  format:
    name: Format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: install toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt
      - name: add cargo caching
        uses: Swatinem/rust-cache@v2
      - name: run formater
        run: cargo fmt --check

  clippy:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: install toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy
      - name: add cargo caching
        uses: Swatinem/rust-cache@v2
      - name: run formater
        run: cargo clippy -- -D warnings
